var t = [
    0.0005,
    0.0010,
    0.0015,
    0.0020,
    0.0025,
    0.0030,
    0.0035,
    0.0040,
    0.0045,
    0.0050,
    0.0055,
    0.0060,
    0.0065,
    0.0070,
    0.0075,
    0.0080,
    0.0085,
    0.0090,
    0.0095,
    0.0100,
    0.0105,
    0.0110,
    0.0115,
    0.0120,
    0.0125,
    0.0130,
    0.0135,
    0.0140,
    0.0145,
    0.0150,
    0.0155,
    0.0160,
    0.0165,
    0.0170,
    0.0175,
    0.0180,
    0.0185,
    0.0190,
    0.0195,
    0.0200,
    0.0205,
    0.0210,
    0.0215,
    0.0220,
    0.0225,
    0.0230,
    0.0235,
    0.0240,
    0.0245,
    0.0250,
    0.0255,
    0.0260,
    0.0265,
    0.0270,
    0.0275,
    0.0280,
    0.0285,
    0.0290,
    0.0295,
    0.0300,
    0.0305,
    0.0310,
    0.0315,
    0.0320,
    0.0325,
    0.0330,
    0.0335,
    0.0340,
    0.0345,
    0.0350,
    0.0355,
    0.0360,
    0.0365,
    0.0370,
    0.0375,
    0.0380,
    0.0385,
    0.0390,
    0.0395,
    0.0400,
    0.0405,
    0.0410,
    0.0415,
    0.0420,
    0.0425,
    0.0430,
    0.0435,
    0.0440,
    0.0445,
    0.0450,
    0.0455,
    0.0460,
    0.0465,
    0.0470,
    0.0475,
    0.0480,
    0.0485,
    0.0490,
    0.0495,
    0.0500,
    0.0505,
    0.0510,
    0.0515,
    0.0520,
    0.0525,
    0.0530,
    0.0535,
    0.0540,
    0.0545,
    0.0550,
    0.0555,
    0.0560,
    0.0565,
    0.0570,
    0.0575,
    0.0580,
    0.0585,
    0.0590,
    0.0595,
    0.0600,
    0.0605,
    0.0610,
    0.0615,
    0.0620,
    0.0625,
    0.0630,
    0.0635,
    0.0640,
    0.0645,
    0.0650,
    0.0655,
    0.0660,
    0.0665,
    0.0670,
    0.0675,
    0.0680,
    0.0685,
    0.0690,
    0.0695,
    0.0700,
    0.0705,
    0.0710,
    0.0715,
    0.0720,
    0.0725,
    0.0730,
    0.0735,
    0.0740,
    0.0745,
    0.0750,
    0.0755,
    0.0760,
    0.0765,
    0.0770,
    0.0775,
    0.0780,
    0.0785,
    0.0790,
    0.0795,
    0.0800,
    0.0805,
    0.0810,
    0.0815,
    0.0820,
    0.0825,
    0.0830,
    0.0835,
    0.0840,
    0.0845,
    0.0850,
    0.0855,
    0.0860,
    0.0865,
    0.0870,
    0.0875,
    0.0880,
    0.0885,
    0.0890,
    0.0895,
    0.0900,
    0.0905,
    0.0910,
    0.0915,
    0.0920,
    0.0925,
    0.0930,
    0.0935,
    0.0940,
    0.0945,
    0.0950,
    0.0955,
    0.0960,
    0.0965,
    0.0970,
    0.0975,
    0.0980,
    0.0985,
    0.0990,
    0.0995,
    0.1000
]

var yt = [
    2.803,
    2.298,
    1.646,
    1.170,
    1.020,
    1.188,
    1.575,
    1.783,
    1.562,
    0.645,
    -1.042,
    -3.172,
    -5.346,
    -7.037,
    -7.637,
    -6.922,
    -4.901,
    -1.930,
    1.331,
    4.220,
    6.146,
    6.644,
    5.812,
    3.912,
    1.426,
    -1.050,
    -3.001,
    -4.148,
    -4.420,
    -4.005,
    -3.132,
    -2.069,
    -0.883,
    0.321,
    1.610,
    3.069,
    4.603,
    6.087,
    7.165,
    7.476,
    6.735,
    4.784,
    1.856,
    -1.607,
    -5.038,
    -7.729,
    -9.158,
    -9.045,
    -7.521,
    -5.003,
    -2.095,
    0.500,
    2.253,
    2.992,
    2.719,
    1.791,
    0.655,
    -0.179,
    -0.512,
    -0.245,
    0.488,
    1.325,
    1.969,
    2.275,
    2.177,
    1.813,
    1.354,
    1.096,
    1.041,
    1.262,
    1.472,
    1.414,
    0.928,
    -0.046,
    -1.415,
    -2.802,
    -3.778,
    -3.957,
    -3.143,
    -1.488,
    0.762,
    2.924,
    4.410,
    4.801,
    3.847,
    1.649,
    -1.256,
    -4.211,
    -6.610,
    -7.874,
    -7.762,
    -6.410,
    -4.076,
    -1.359,
    1.334,
    3.572,
    5.234,
    6.307,
    6.825,
    7.016,
    6.847,
    6.283,
    5.236,
    3.603,
    1.337,
    -1.331,
    -4.101,
    -6.389,
    -7.766,
    -7.885,
    -6.622,
    -4.217,
    -1.228,
    1.675,
    3.849,
    4.804,
    4.446,
    2.917,
    0.727,
    -1.474,
    -3.166,
    -3.960,
    -3.770,
    -2.803,
    -1.429,
    -0.058,
    0.915,
    1.432,
    1.438,
    1.264,
    1.060,
    1.062,
    1.378,
    1.802,
    2.184,
    2.309,
    1.979,
    1.311,
    0.470,
    -0.233,
    -0.494,
    -0.189,
    0.650,
    1.766,
    2.712,
    2.978,
    2.277,
    0.504,
    -2.096,
    -5.016,
    -7.518,
    -9.045,
    -9.156,
    -7.742,
    -5.060,
    -1.625,
    1.867,
    4.805,
    6.735,
    7.481,
    7.182,
    6.103,
    4.619,
    3.074,
    1.609,
    0.305,
    -0.900,
    -2.043,
    -3.129,
    -3.995,
    -4.438,
    -4.134,
    -2.969,
    -1.035,
    1.429,
    3.882,
    5.833,
    6.681,
    6.127,
    4.221,
    1.344,
    -1.940,
    -4.897,
    -6.927,
    -7.640,
    -7.006,
    -5.372,
    -3.191,
    -1.008,
    0.653,
    1.575,
    1.788,
    1.555,
    1.203,
    1.014,
    1.190,
    1.642,
    2.273,
    2.794,
    2.987
]

var sigma = [
    0.004,
    0.026,
    0.029,
    0.016,
    0.007,
    0.018,
    0.035,
    0.019,
    0.003,
    0.009,
    0.036,
    0.009,
    0.037,
    0.016,
    0.004,
    0.012,
    0.014,
    0.005,
    0.013,
    0.016,
    0.017,
    0.020,
    0.008,
    0.030,
    0.012,
    0.011,
    0.026,
    0.036,
    0.002,
    0.006,
    0.023,
    0.023,
    0.013,
    0.008,
    0.020,
    0.003,
    0.038,
    0.003,
    0.003,
    0.004,
    0.030,
    0.014,
    0.031,
    0.031,
    0.029,
    0.034,
    0.018,
    0.033,
    0.018,
    0.003,
    0.020,
    0.022,
    0.010,
    0.032,
    0.018,
    0.017,
    0.011,
    0.034,
    0.001,
    0.009,
    0.017,
    0.011,
    0.037,
    0.027,
    0.015,
    0.023,
    0.008,
    0.036,
    0.016,
    0.031,
    0.018,
    0.010,
    0.012,
    0.029,
    0.001,
    0.010,
    0.012,
    0.004,
    0.017,
    0.016,
    0.038,
    0.010,
    0.018,
    0.000,
    0.033,
    0.024,
    0.012,
    0.032,
    0.001,
    0.006,
    0.021,
    0.029,
    0.013,
    0.023,
    0.001,
    0.039,
    0.009,
    0.037,
    0.020,
    0.031,
    0.012,
    0.006,
    0.007,
    0.022,
    0.002,
    0.017,
    0.024,
    0.014,
    0.007,
    0.027,
    0.012,
    0.021,
    0.016,
    0.027,
    0.037,
    0.006,
    0.036,
    0.003,
    0.030,
    0.002,
    0.006,
    0.015,
    0.009,
    0.011,
    0.030,
    0.004,
    0.019,
    0.026,
    0.031,
    0.017,
    0.006,
    0.016,
    0.033,
    0.001,
    0.000,
    0.020,
    0.008,
    0.003,
    0.001,
    0.003,
    0.019,
    0.007,
    0.020,
    0.016,
    0.021,
    0.003,
    0.027,
    0.016,
    0.009,
    0.033,
    0.012,
    0.034,
    0.012,
    0.009,
    0.014,
    0.002,
    0.009,
    0.007,
    0.029,
    0.009,
    0.039,
    0.013,
    0.002,
    0.004,
    0.022,
    0.016,
    0.004,
    0.030,
    0.015,
    0.016,
    0.016,
    0.008,
    0.019,
    0.019,
    0.029,
    0.029,
    0.027,
    0.034,
    0.003,
    0.031,
    0.001,
    0.006,
    0.007,
    0.012,
    0.011,
    0.014,
    0.008,
    0.014,
    0.032,
    0.035,
    0.019,
    0.009,
    0.002,
    0.012,
    0.002,
    0.024,
    0.037,
    0.012,
    0.013,
    0.013
]

/********************* DEFININDO FUNCOES *********************/

function f1(x){
    return 1;
}

function f2(x){
    return x;
}

function f3(x){
    return (x * x);
}

arrayFuncoes = [f1, f2, f3];

/********************* CALCULANDO SISTEMA LINEAR *********************/

matrizSomatorio = [];

for(let i = 0; i < arrayFuncoes.length; i++){
    
    // calculando matriz
    var vetorAux = [];
    for(let j = 0; j < arrayFuncoes.length; j++){

        var somatorio = 0;
        for(let k = 0; k < t.length; k++){
            let x = t[k];
            somatorio = somatorio + (arrayFuncoes[i](x) * arrayFuncoes[j](x));
        }

        vetorAux.push(somatorio);
    }

    // calculando vetor solucao
    var somatorio2 = 0;
    for(let k = 0; k < yt.length; k++){
        let x = t[k];
        somatorio2 = somatorio2 + (arrayFuncoes[i](x) * yt[k]);
    }

    vetorAux.push(somatorio2);

    matrizSomatorio.push(vetorAux);
}

/********************* RESOLVENDO SISTEMA LINEAR *********************/

function ordenaDecrescente(matriz){

    for(let i = 0; i < matriz.length; i++){
        for(let j = (i + 1); j < matriz.length; j++){
            if(Math.abs(matriz[j][0]) > Math.abs(matriz[i][0])){
    
                trocaLinha(matriz, j, i)
            }
        }
    }    
}

function trocaLinha(matriz, a, b){
    var aux = matriz[a];

    matriz[a] = matriz[b];
    matriz[b] = aux;
}

function eliminacaoGauss(matriz){

    // eliminacao pra frente
    for(let k = 0; k < matriz.length - 1; k++){


        for(let i = k; i < matriz.length; i++){
            reduzLinha(matriz[i], k);
        }
        for(let i = k + 1; i < matriz.length; i++){
            subtraiLinha(matriz[k], matriz[i]);
        }

    }

    reduzLinha(matriz[matriz.length - 1], (matriz[0].length - 2));


    
    // substituicao pra tras
    var conta = 0;
    for(let k = matriz.length - 1; k > -1; k--){

        for(let i = 0; i < matriz.length - conta; i++){
            reduzLinha(matriz[i], k);
        }
        for(let i = 0; i < matriz.length - conta - 1; i++){
            subtraiLinha(matriz[k], matriz[i]);
        }
        conta++;
    }

    reduzLinha(matriz[0], 0);
}

function multiplicaLinha(linha, multiplicador){
    for(let i = 0; i < linha.length; i++){

        linha[i] = (linha[i] * multiplicador);
    }
}

function subtraiLinha(linhaA, linhaB){
    for(let i = 0; i < linhaA.length; i++){

        linhaB[i] = linhaB[i] - linhaA[i];
    }
}

function reduzLinha(linha, coluna){
    var multiplicador = (1 / linha[coluna]);
    multiplicaLinha(linha, multiplicador);
}
    
ordenaDecrescente(matrizSomatorio);
eliminacaoGauss(matrizSomatorio);


console.log(matrizSomatorio);

console.log('a1 = ' + matrizSomatorio[0][3]);
console.log('a2 = ' + matrizSomatorio[1][3]);
console.log('a3 = ' + matrizSomatorio[2][3]);


function renderTabela(matriz){
    let html = "<table>";

    for(let i = 0; i < matriz.length; i++){
        html += "<tr>";
        html += "<th>a" + (i + 1) + "</th>";
        for(let j = 0; j < matriz[0].length; j++){
            html += "<td>" + matriz[i][j] + "</td>";
        }

        html += "</tr>";
    }

    html += "</table>";


    document.getElementById("tabela").innerHTML = html;
}


renderTabela(matrizSomatorio)

